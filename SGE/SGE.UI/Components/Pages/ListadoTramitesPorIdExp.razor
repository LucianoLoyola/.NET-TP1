@page "/listadoTramitesExp/{IdExp:int?}"
@rendermode InteractiveServer
@inject CasoDeUsoListarTramitesPorIdEx TramitesPorId 
@inject CasoDeUsoTramiteBaja tramiteBaja
@inject CasoDeUsoExpedienteConsultaPorId consultaExpediente
@inject ListarUserAccountUseCase listarUsuarios
@inject NavigationManager Navegador
@inject IServicioSession sesion
@inject IServicioAutorizacion autorizacion


 
@*<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>*@

@if (tramitesExp.Count == 0){
    <h3>El expediente aún no tiene Trámites</h3>
    @* @if (autorizacion.PoseeElPermiso(sesion.GetUserId(), TipoPermiso.ExpedienteAlta)){
        <button class="btn btn-primary" @onclick= "()=>AgregarTramite()">Agregar Tramite</button>
        
    } *@
    <button class="btn btn-primary" @onclick= "()=>AgregarTramite()">Agregar Tramite</button>
}

else{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>ID EXPEDIENTE</th>
                <th>ETIQUETA</th>
                <th>CONTENIDO</th>
                <th>FECHA CREACION</th>
                <th>FECHA MODIFICACION</th>
                <th>ID USUARIO MODIF.</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tra in tramitesExp)
            {
                <tr>
                    <td>@tra.Id</td>
                    <td>@tra.ExpedienteId  </td>
                    <td>@tra.Etiqueta</td>
                    <td>@tra.Contenido</td>
                    <td>@tra.fechaHoraCreacion</td>
                    <td>@tra.fechaHoraUltimaModificacion</td>
                    <td>@tra.IdUsuarioMod</td>
                    <td>
                        @* @if (autorizacion.PoseeElPermiso(sesion.GetUserId(), TipoPermiso.TramiteModificacion)){
                            <button class="btn btn-primary" @onclick= "()=>ModificarTramite(tra)">Editar</button>

                        } *@
                        @* @if (autorizacion.PoseeElPermiso(sesion.GetUserId(), TipoPermiso.TramiteBaja)){
                            <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(tra)">Eliminar</button>
                        } *@
                        <button class="btn btn-primary" @onclick= "()=>ModificarTramite(tra)">Editar</button>
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(tra)">Eliminar</button>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <span class="text-danger">@_errorMessageAuthBaja</span>
        @* @if (autorizacion.PoseeElPermiso(sesion.GetUserId(), TipoPermiso.TramiteAlta)){
            <button class="btn btn-primary" @onclick= "()=>AgregarTramite()">Agregar Tramite</button>

        } *@
        <button class="btn btn-primary" @onclick= "()=>AgregarTramite()">Agregar Tramite</button>

}

<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>


@code {

    Tramite? _TramiteParaEliminar = null;
    Expediente? _ExpedienteParaModificar = null;
    DialogoConfirmacion dialogo;
    [Parameter] public int IdExp {get;set;}
    List<Tramite> tramitesExp = new List<Tramite>();
    private string? _errorMessageAuthBaja;
    protected override void OnInitialized()
    {
        _ExpedienteParaModificar = consultaExpediente.Ejecutar(IdExp);
        dialogo = new DialogoConfirmacion();
        tramitesExp = TramitesPorId.Ejecutar(IdExp);
    }


    //ver otra manera de hacer, con EventCallback  (esta en la filmina)
    private void ConfirmarEliminacion(Tramite tra)
    {
        _TramiteParaEliminar = tra;
        dialogo.Mensaje = $"¿Desea eliminar el tramite {tra.Id}?";
        dialogo.Mostrar();
    }
    private void Eliminar()
    {
        try{
            if (_TramiteParaEliminar != null)
            {
                tramiteBaja.Ejecutar(_TramiteParaEliminar.Id, _ExpedienteParaModificar, sesion.User.Id, TipoPermiso.TramiteBaja);
                tramitesExp = TramitesPorId.Ejecutar(IdExp); //se actualiza la lista de tramites
            }

        }
        catch(Exception error){
            _errorMessageAuthBaja = error.Message;
        }
    }

    void ModificarTramite(Tramite tra){
        Navegador.NavigateTo($"tramite/{IdExp}/{tra.Id}");
    }

    void AgregarTramite(){
        Navegador.NavigateTo($"tramite/{IdExp}");
    }

}