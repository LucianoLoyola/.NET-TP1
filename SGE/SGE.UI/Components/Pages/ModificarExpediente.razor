@page "/expediente/{Id:int?}"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteAlta altaExpediente
@inject CasoDeUsoExpedienteConsultaPorId consultaExpediente
@inject CasoDeUsoExpedienteModificacion modificacionExpediente
@inject NavigationManager Navegador
@inject IServicioSession sesion

@if (_esNuevoExpediente)
{
    <h3>Agregar Expediente</h3>

    @* Formulario para agregar Expediente *@
    <form>
        <div class="form-group">
            <label for="caratula">Caratula:</label>
            <input type="text" class="form-control" id="caratula" @bind="_expediente.caratula" required>
        </div>

        @* Campo para seleccionar el estado del expediente *@
        <div class="form-group">
            <label for="estado">Estado del Expediente:</label>
            <select id="estado" class="form-control" @bind="_expediente.estado">
                @foreach (var estado in estados)
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <button class="btn btn-primary" @onclick="CrearExpediente">Agregar Expediente</button>
    </form>
}

else
{
    <h3>Modificar Expediente</h3>

    @* Formulario para modificar Expediente *@
    <form>
        <div class="form-group">
            <label for="caratula">Caratula:</label>
            <input type="text" class="form-control" id="caratula" @bind="_expediente.caratula" required>
        </div>

        @* Campo para seleccionar el estado del expediente *@
        <div class="form-group">
            <label for="estado">Estado del Expediente:</label>
            <select id="estado" class="form-control" @bind="_expediente.estado">
                @foreach (var estado in estados)
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <button class="btn btn-primary" @onclick="ActualizarExpediente">Modificar Expediente</button>
    </form>
}

<span class="text-danger">@_errorMessageAlta</span>
<span class="text-danger">@_errorMessageEdit</span>
<span class="text-success">@successMessage</span>

@code {
    Expediente _expediente = new Expediente();
    [Parameter] public int? Id { get; set; }
    bool _esNuevoExpediente = true;
    private string _errorMessageAlta, _errorMessageEdit, successMessage= string.Empty;
    private List<Estado> estados = Enum.GetValues(typeof(Estado)).Cast<Estado>().ToList();

    //se implementa una logica de delay (loading) para mostrar el mensaje de excepci√≥n de permiso
    //quitando esto, funciona igual pero el mensaje se muestra por pocos milisegundos
    protected override void OnParametersSet()
    {
        if (Id.HasValue)
        {
            try
            {
                var exp_hallado = consultaExpediente.Ejecutar(Id.Value);
                if (exp_hallado != null)
                {
                    _expediente = exp_hallado;
                    _esNuevoExpediente = false;
                }
            }
            catch (Exception ex)
            {
                _errorMessageAlta = "Error al cargar el expediente.";
                _errorMessageEdit = "Error al cargar el expediente.";
    
            }
        }
    }

    async Task CrearExpediente()
    {
        try
        {
            _errorMessageAlta = string.Empty;
            altaExpediente.Ejecutar(_expediente, sesion.User.Id, TipoPermiso.ExpedienteAlta);
            successMessage = "Expediente Agregado";
            await Task.Delay(2000);
            Siguiente();
        }
        catch (AutorizacionException e)
        {
            _errorMessageAlta = e.Message;
            await Task.Delay(2000);
            return;
        }
        catch (ValidacionException e)
        {
            _errorMessageAlta = e.Message;
            await Task.Delay(2000);
            return;
        }
    }

    void ActualizarExpediente()
    {
        try
        {
            _errorMessageEdit = string.Empty;
            modificacionExpediente.Ejecutar(_expediente, sesion.User.Id, TipoPermiso.ExpedienteModificacion);
            Siguiente();
        }
        catch (AutorizacionException e)
        {
            _errorMessageEdit = e.Message;
            return;
        }
        catch (ValidacionException e)
        {
            _errorMessageEdit = e.Message;
            return;
        }
    }

    void Siguiente()
    {
        Navegador.NavigateTo("/listadoExpedientes");
    }
}
