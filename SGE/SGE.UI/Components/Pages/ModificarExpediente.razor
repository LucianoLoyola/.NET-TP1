@page "/expediente/{Id:int?}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles="Administrador,Usuario")]
@using Microsoft.EntityFrameworkCore
@using SGE.Aplicacion
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteAlta altaExpediente
@inject CasoDeUsoExpedienteConsultaPorId consultaExpediente
@inject CasoDeUsoExpedienteModificacion modificacionExpediente
@inject NavigationManager Navegador
@inject IServicioSesion sesion
@inject SGEContext DbContext


@if (_esNuevoExpediente){


    <h3>Agregar Expediente</h3>

    @* Formulario para agregar Expediente *@
    <form>
        <div class="form-group">
            <label for="valorAsegurado">Caratula:</label>
            <input type="text" class="form-control" id="caratula" @bind="_expediente.caratula" required>
        </div>

        @* Campo para seleccionar el estado del expediente *@
        <div class="form-group">
            <label for="estado">Estado del Expediente:</label>
            <select id="estado" class="form-control" @bind="_expediente.estado">
                @foreach (var estado in estados)
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <button class="btn btn-primary" @onclick="CrearExpediente">Agregar Expediente</button>


    </form>

    @* Componente para mostrar errores *@
    @* <Excepcion @ref=dialogo /> *@

    <p class="text-danger">@_errorMessage</p>
}

//codigo para la modificación----------------------------------
else{

    <h3>Modificar Expediente</h3>

    @* Formulario para modificar Expediente *@
    <form>
        <div class="form-group">
            <label for="valorAsegurado">Caratula:</label>
            <input type="text" class="form-control" id="caratula" @bind="_expediente.caratula" required>
        </div>

        @* Campo para seleccionar el estado del expediente *@
        <div class="form-group">
            <label for="estado">Estado del Expediente:</label>
            <select id="estado" class="form-control" @bind="_expediente.estado">
                @foreach (var estado in estados)
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <button class="btn btn-primary" @onclick="ActualizarExpediente">Modificar Expediente</button>


    </form>

    @* Componente para mostrar errores *@
    @* <Excepcion @ref=dialogo /> *@

    @* <p class="text-danger">@_errorMessage</p> *@

}




@code {
    private List<UserAccount> usuarios;  // Lista de usuarios para imprimir en consola

    Expediente _expediente = new Expediente();
    [Parameter] public int? Id {get;set;}
    bool _esNuevoExpediente = true;
    private string _errorMessage; // Mensaje de error para mostrar en la página

    //lista de estados para seleccionar
    private List<Estado> estados = Enum.GetValues(typeof(Estado)).Cast<Estado>().ToList();
    
    protected override void OnInitialized(){

        @* var usuarioActual = DbContext.Usuarios.Include(u => u.Permisos).FirstOrDefault(u => u.Id == sesion.GetUserId());
        if (usuarioActual == null)
        {
            throw new InvalidOperationException("Usuario no encontrado.");
        }         *@

    }
    protected override void OnParametersSet()
    {
        if (Id != null)
        {
            int id = Id.HasValue ? Id.Value : -1; // los Id son a partir del 1
            var exp_hallado = consultaExpediente.Ejecutar(id);
            if (exp_hallado != null)
            {
                _expediente = exp_hallado;
                _esNuevoExpediente = false;
            }
        }
    }

    void CrearExpediente()
    {
        try
        {
            _errorMessage="";
            altaExpediente.Ejecutar(_expediente, sesion.GetUserId(), TipoPermiso.ExpedienteAlta);
            Siguiente();
        }
        catch (Exception error)
        {
            _errorMessage = "No tiene permisos para agregar este expediente.";
            Console.WriteLine($"Error al agregar expediente: {error.Message}");
        }
    }

    void ActualizarExpediente()
    {
        try
        {
            _errorMessage="";
            modificacionExpediente.Ejecutar(_expediente, sesion.GetUserId(), TipoPermiso.ExpedienteModificacion);
            Siguiente();
        }
        catch (Exception error)
        {
            _errorMessage = "No tiene permisos para modificar este expediente.";
            Console.WriteLine($"Error al modificar expediente: {error.Message}");
        }
    }


    void Siguiente()
    {
        try
        {
            Console.WriteLine("Navegando a /listadoExpedientes");
            Navegador.NavigateTo("/listadoExpedientes");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al navegar: {ex.Message}");
        }    
        
    }
}    
