@page "/expediente/{Id;int?}"
@using SGE.Aplicacion
InteractiveServer
@inject CasoDeUsoExpedienteAlta altaExpediente
@inject CasoDeUsoExpedienteConsultaPorId consultaExpediente
@inject CasoDeUsoExpedienteModificacion modificacionExpediente
@inject NavigationManager Navegador
@inject IServicioSesion sesion

@if (_esNuevoExpediente){


    <h3>Agregar Expediente</h3>

    @* Formulario para agregar Expediente *@
    <form>
        <div class="form-group">
            <label for="valorAsegurado">Caratula:</label>
            <input type="text" class="form-control" id="caratula" @bind="_expediente.caratula" required>
        </div>

        @* Campo para seleccionar el estado del expediente *@
        <div class="form-group">
            <label for="estado">Estado del Expediente:</label>
            <select id="estado" class="form-control" @bind="_expediente.estado">
                @foreach (var estado in estados)
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <button type="button" class="btn btn-primary" @onclick="CrearExpediente">Agregar Nuevo</button>

    </form>

    @* Componente para mostrar errores *@
    @* <Excepcion @ref=dialogo /> *@


}
else{

    //aquí codigo para modificación del expediente
}


@code {
    [Parameter]
    public string? Id { get; set; }
    @* Excepcion dialogo = null!; *@
    Expediente _expediente = new Expediente();
    bool _esNuevoExpediente = true;

    //lista de estados para seleccionar
    @* private Estado estado { get; set; } *@
    private List<Estado> estados = Enum.GetValues(typeof(Estado)).Cast<Estado>().ToList();
    
    @* //convierte a int
    protected override void OnInitialized()
    {
        if (Id != null) expediente.Id = int.Parse(Id);

    }  *@
    protected override void OnParametersSet()
    {
        if (Id != null)
        {
            var exp_hallado = consultaExpediente.Ejecutar(int.Parse(Id));
            if (exp_hallado != null)
            {
                _expediente = exp_hallado;
                _esNuevoExpediente = false;
            }
        }
    }

    @* private void ActualizarEstado(Estado value)
    {
        _expediente.estado = value;
    } *@

    private void CrearExpediente()
    {
        try
        {
            altaExpediente.Ejecutar(_expediente, sesion.GetUserId(), TipoPermiso.ExpedienteAlta);
            Siguiente();
        }
        catch (Exception e)
        {
            @* dialogo.Mostrar(e.Message); *@
        }
    
    }
    private void Siguiente()
    {
        Navegador.NavigateTo("/");
    }
}    
