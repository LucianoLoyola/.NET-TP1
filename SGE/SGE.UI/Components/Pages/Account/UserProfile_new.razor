@page "/userprofile_new"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles="Administrador")]
@using Microsoft.EntityFrameworkCore
@using SGE.Repositorios
@using SGE.Aplicacion
@using SGE.Aplicacion.CasosDeUso
@rendermode InteractiveServer
@inject AgregarUsuarioUseCase agregarUsuario
@inject IServicioSesion sesion
@inject SGEContext DbContext
@inject NavigationManager Navigation
@inject IServicioHash servicioHash

<h3>Perfil de Usuario</h3>
<form method="post" @onsubmit="HandleValidSubmit">
    <div class="mb-3">
        <label for="UserName">Nombre de Usuario:</label>
        <input type="text" id="UserName" class="form-control" @bind="user.UserName" required />
    </div>
        <div class="mb-3">
        <label for="Email">Contraseña:</label>
        <input type="password" id="Contraseña" class="form-control" @bind="user.Password" required />
    </div>
    <div class="mb-3">
        <label for="Name">Nombre:</label>
        <input type="text" id="Name" class="form-control" @bind="user.Name" required />
    </div>
    <div class="mb-3">
        <label for="Surname">Apellido:</label>
        <input type="text" id="Surname" class="form-control" @bind="user.Surname" required />
    </div>
    <div class="mb-3">
        <label for="Email">Email:</label>
        <input type="email" id="Email" class="form-control" @bind="user.Email" required />
    </div>
    <div class="mb-3">
        <label for="Role">Rol:</label>
        <select id="Role" class="form-control" @bind="user.Role" required>
            <option value="Usuario">Usuario</option>
            <option value="Administrador">Administrador</option>
        </select>
    </div>
    
    <button type="submit" class="btn btn-primary">Guardar</button>
</form>


@code {
    [Parameter]
    public int UserId { get; set; }

    private UserAccount user { get; set; } = new UserAccount();

    private async Task HandleValidSubmit()
    {

        if(user.Role is null){
            user.Role="Usuario";
        }
        user.Password=servicioHash.GetHashSha256(user.Password);
        user.Permisos=new List<Permiso>(){
                new Permiso(){tipoPermiso = TipoPermiso.Lectura}, // Asignar permiso de lectura
                new Permiso(){tipoPermiso = TipoPermiso.ExpedienteAlta},     // Asignar permiso de alta expediente para prueba
                new Permiso(){tipoPermiso = TipoPermiso.ExpedienteModificacion},     // Asignar permiso de modificacion expediente para prueba
                new Permiso(){tipoPermiso = TipoPermiso.ExpedienteBaja},     // Asignar permiso de modificacion expediente para prueba

        };


        agregarUsuario.Ejecutar(user);
        Console.WriteLine("Exito");
        Navigation.NavigateTo("/");
    
    }
}