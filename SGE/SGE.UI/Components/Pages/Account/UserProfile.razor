@page "/userprofile/{Id:int}"
@rendermode InteractiveServer
@using SGE.Aplicacion.ViewModels
@inject ObtenerUserAccountUseCase obtenerUsuario
@using Microsoft.AspNetCore.Components.Authorization

<h3>Perfil de Usuario</h3>

@if (user == null)
{
    <p class="text-danger">Usted no ha iniciado sesión.</p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Información del Usuario</h5>
            <p><strong>Nombre de Usuario:</strong> @user.UserName</p>
            <p><strong>Nombre:</strong> @user.Name</p>
            <p><strong>Apellido:</strong> @user.Surname</p>
            <p><strong>Email:</strong> @user.Email</p>
            <p><strong>Rol:</strong> @user.Role</p>
            @if (user.Permisos != null && user.Permisos.Any())
            {
                <div>
                    <strong>Permisos:</strong>
                    <ul>
                        @foreach (var p in user.Permisos)
                        {
                            <div>
                                <li>@p.tipoPermiso</li>
                            </div>
                        }
                    </ul>
                </div>
            }
            else
            {
                <p>Este usuario no tiene permisos asignados.</p>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private UserAccount user { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = obtenerUsuario.Ejecutar(Id);

    }
}
