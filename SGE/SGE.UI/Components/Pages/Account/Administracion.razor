@page "/administracion"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles="Administrador")]
@using SGE.Aplicacion
@using SGE.Repositorios
@using SGE.Aplicacion.ViewModels
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@inject SGEContext DbContext
@inject NavigationManager navigationManager

<h1>Administraci√≥n</h1>

<h3>Lista de Usuarios</h3>

<a href="/userprofile_new" class="btn btn-primary">Alta de usuario</a>

@if (UserAccounts != null && UserAccounts.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Rol</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in UserAccounts)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Role</td>
                    <td>
                        <a href="/userprofile/@user.Id" class="btn btn-primary">Ver Perfil</a>
                        <a href="/userprofile_edit/@user.Id" class="btn btn-primary">Modificar</a>
                        <a href="/userprofile_delete/@user.Id" class="btn btn-primary">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay usuarios disponibles.</p>
}

@code {
    private List<UserAccount> UserAccounts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            UserAccounts = DbContext.Usuarios.ToList();
            Console.WriteLine("Usuarios cargados correctamente");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar usuarios: {ex.Message}");
        }
    }

}
