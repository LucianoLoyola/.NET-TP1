@page "/administracion"
@rendermode InteractiveServer
@using SGE.Aplicacion.ViewModels
@using SGE.UI.Components.Pages
@inject EliminarUserAccountUseCase eliminarUsuario
@inject ObtenerUserAccountUseCase obtenerUsuario
@inject ListarUserAccountUseCase listarUsuarios
@inject NavigationManager navigationManager

<h1>Administración</h1>

<h3>Lista de Usuarios</h3>

<a href="/userprofile_new" class="btn btn-primary">Agregar Nuevo Usuario</a>

@if (UserAccounts != null && UserAccounts.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Rol</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in UserAccounts)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Role</td>
                    <td>
                        <a href="/userprofile/@user.Id" class="btn btn-primary">Ver Perfil</a>
                        <a href="/userprofile_edit/@user.Id" class="btn btn-primary">Modificar</a>
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(user)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <DialogoConfirmacion @ref="dialogo" Mensaje="@mensajeConfirmacion" OnConfirmado="OnConfirmarEliminacion" />
}
else
{
    <p>No hay usuarios disponibles.</p>
}

@code {
    private List<UserAccount> UserAccounts;
    private UserAccount? _usuarioEliminar = null;
    private DialogoConfirmacion dialogo;
    private string mensajeConfirmacion = "";

    protected override void OnInitialized()
    {
        // Obtener todos los usuarios de la base de datos
        UserAccounts = listarUsuarios.Ejecutar();
    }

    private void ConfirmarEliminacion(UserAccount user)
    {
        _usuarioEliminar = user;
        mensajeConfirmacion = $"¿Desea eliminar el usuario {user.UserName}?";
        dialogo.Mostrar();
    }

    private void OnConfirmarEliminacion(bool confirmado)
    {
        if (confirmado && _usuarioEliminar != null)
        {
            eliminarUsuario.Ejecutar(_usuarioEliminar.Id);
            UserAccounts = listarUsuarios.Ejecutar();
        }
        _usuarioEliminar = null;
    }
}
