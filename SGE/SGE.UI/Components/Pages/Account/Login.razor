@page "/login"
@rendermode InteractiveServer

@using SGE.Aplicacion.ViewModels
@inject LoginUseCase login
@inject IServicioEvento servicioEvento
 @inject IServicioSession sesion
@*@inject IServicioHash servicioHash *@
@inject ObtenerUserAccountUseCase getUsuario
@inject UsuarioValidador validador
@inject NavigationManager navegador


<div class="row">
    <div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <EditForm Model="@Model" OnValidSubmit="LogIn" FormName="LoginForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center flex-column">
                <img src="/images/panel1.png" style="max-height:5rem;" />
                <h3>LOGIN</h3>
            </div>
            <div class="mb-3">
                <label>Usuario</label>
                <InputText @bind-Value="Model.UserName" class="form-control" placeholder="Username" />
                <ValidationMessage For="() => Model.UserName" />
            </div>
            <div class="mb-3">
                <label>Contraseña</label>
                <InputText @bind-Value="Model.Password" placeholder="Password" type="password" class="form-control" />
                <ValidationMessage For="() => Model.Password" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@_errorMessage</span>
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="()=>RecuperarContraseña()" class="btn btn-link">Recuperar contraseña</button>
        </div>
        <span class="text-danger">@_errorRecover</span>
    </div>
</div>

</div>



@code {

    [SupplyParameterFromForm]
    public LoginViewModel Model { get; set; } = new LoginViewModel();
    
    private string? _errorMessage,_errorRecover;
    
    private void RecuperarContraseña()
    {
        // Lógica para recuperar la contraseña (si es necesario)
        // Mostrar un mensaje al usuario
        _errorRecover = "Por favor, comuníquese con el administrador para restablecer su contraseña.";
    }
    
    void LogIn()
    {
        try{
            if(login.Ejecutar(Model.UserName,Model.Password,sesion)){
                navegador.NavigateTo("/");
            }
            else{
                _errorMessage = "Usuario o contraseña inválidos";
                return;
            }
        }
        catch(ValidacionException e){
            _errorMessage=e.Message;
            return;
        }
        catch(RepositorioException e){
            _errorMessage=e.Message;
            return;
        }

        @* servicioEvento.Notificar();  *@
    }

}

