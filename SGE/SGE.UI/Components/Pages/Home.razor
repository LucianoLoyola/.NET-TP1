@page "/"
@using SGE.Repositorios
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject SGEContext DbContext

<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-12">
        <h2 class="fw-bolder">Bienvenido a la página</h2>
    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <NotAuthorized>
                    @if (!user.Identity.IsAuthenticated)
                    {
                        <span>No estás logeado.</span>
                    }
                </NotAuthorized>
                <Authorized>
                    @if (user != null && user.Identity != null && user.Identity.IsAuthenticated)
                    {
                        <span>Sesión iniciada como <b>@user.Identity.Name</b></span>
                        <span>Tu rol es: <b>@UserRole</b></span>
                    }
                </Authorized>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    private ClaimsPrincipal user;
    private string UserRole { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        user = authState.User;

        // Obtener el nombre de usuario del claim
        var userName = user.Identity.Name;

        // Obtener el rol del usuario desde la base de datos
        var userData = DbContext.UserAccount.Where(u => u.UserName == userName).FirstOrDefault();
        if (userData != null)
        {
            UserRole = userData.Role;
        }
    }
}